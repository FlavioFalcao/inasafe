# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012, QGIS project
# This file is distributed under the same license as the QGIS Documentation Project package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation Project 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-02-28 10:26\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

# eddca3eeb8de4ad59b0041976ea0d789
#: ../../source/api-docs/safe/common/interpolation2d.rst:6
msgid "Module:  safe.common.interpolation2d"
msgstr ""

# 815584098a0643448ceb72c9c8768c59
#: ../../../safe/common/interpolation2d.py:docstring of
#: safe.common.interpolation2d:1
msgid "**Module for 2D interpolation over a rectangular mesh**"
msgstr ""

# e4664455192c4e40a6651be18a9742e0
#: ../../../safe/common/interpolation2d.py:docstring of
#: safe.common.interpolation2d:3
msgid "This module:"
msgstr ""

# b14c121e23c1494d84bd07384c4ba136
#: ../../../safe/common/interpolation2d.py:docstring of
#: safe.common.interpolation2d:5
msgid ""
"provides piecewise constant (nearest neighbour) and bilinear interpolation"
msgstr ""

# c21031e1db0c448097db54420ea5e1f3
#: ../../../safe/common/interpolation2d.py:docstring of
#: safe.common.interpolation2d:6
msgid "is fast (based on numpy vector operations)"
msgstr ""

# 5af7a9b45f4242d8b6651da7ad54090a
#: ../../../safe/common/interpolation2d.py:docstring of
#: safe.common.interpolation2d:7
msgid "depends only on numpy"
msgstr ""

# c10789d8a4e0429ca533ea5433920d17
#: ../../../safe/common/interpolation2d.py:docstring of
#: safe.common.interpolation2d:8
msgid ""
"guarantees that interpolated values never exceed the four nearest neighbours"
msgstr ""

# 939c0fd59b4348f69b127c573f52467b
#: ../../../safe/common/interpolation2d.py:docstring of
#: safe.common.interpolation2d:9
msgid "handles missing values in domain sensibly using NaN"
msgstr ""

# 6593611885fa4e859fabf8ff508a6834
#: ../../../safe/common/interpolation2d.py:docstring of
#: safe.common.interpolation2d:10
msgid "is unit tested with a range of common and corner cases"
msgstr ""

# 4d377afc313a43d4ac4dcbd2e1020374
#: ../../../safe/common/interpolation2d.py:docstring of
#: safe.common.interpolation2d:12
msgid ""
"See end of this file for documentation of the mathematical derivation used."
msgstr ""

# e01afa3c7eec47b0b0b0c8b4fa0a7c1d
#: ../../../safe/common/interpolation2d.py:docstring of
#: safe.common.interpolation2d.check_inputs:1
msgid "Check inputs for interpolate2d function"
msgstr ""

# bef3b48763394f30ab8738c1f6d30471
#: ../../../safe/common/interpolation2d.py:docstring of
#: safe.common.interpolation2d.interpolate2d:1
msgid "Fundamental 2D interpolation routine"
msgstr ""

# 207f93f4ea1b40f281d3cb9393d4faf4
#: ../../../safe/common/interpolation2d.py:docstring of
#: safe.common.interpolation2d.interpolate2d:4
msgid "x: 1D array of x-coordinates of the mesh on which to interpolate"
msgstr ""

# b1b108b829c7444a8e9ff7d78710a2d0
#: ../../../safe/common/interpolation2d.py:docstring of
#: safe.common.interpolation2d.interpolate2d:5
msgid "y: 1D array of y-coordinates of the mesh on which to interpolate"
msgstr ""

# beb2fcd818b042faa5665144f4ae7f42
#: ../../../safe/common/interpolation2d.py:docstring of
#: safe.common.interpolation2d.interpolate2d:6
msgid "Z: 2D array of values for each x, y pair"
msgstr ""

# 5022c3bb58834d69a391f0ba0b26d79a
#: ../../../safe/common/interpolation2d.py:docstring of
#: safe.common.interpolation2d.interpolate2d:7
msgid "points: Nx2 array of coordinates where interpolated values are sought"
msgstr ""

# 5d2f2c2bdc9c4a649b6b19fe6069e782
#: ../../../safe/common/interpolation2d.py:docstring of
#: safe.common.interpolation2d.interpolate2d:8
msgid "mode: Determines the interpolation order. Options are"
msgstr ""

# 61522528fff3437db0a5f8a9f98cb317
#: ../../../safe/common/interpolation2d.py:docstring of
#: safe.common.interpolation2d.interpolate2d:10
msgid "'constant' - piecewise constant nearest neighbour interpolation"
msgstr ""

# 8ca0424f1d024780b765d8efa2e6d3f1
#: ../../../safe/common/interpolation2d.py:docstring of
#: safe.common.interpolation2d.interpolate2d:12
msgid "nearest neighbours (default)"
msgstr ""

# 63f0fa893724443bba638c904c8aa685
#: ../../../safe/common/interpolation2d.py:docstring of
#: safe.common.interpolation2d.interpolate2d:15
msgid ""
"will be raised when interpolated values are requested outside the domain of "
"the input data. If False, nan is returned for those values"
msgstr ""

# 8e8727df35614d0d904e1b1574f99653
#: ../../../safe/common/interpolation2d.py:docstring of
#: safe.common.interpolation2d.interpolate2d:20
msgid "1D array with same length as points with interpolated values"
msgstr ""

# b74650d1d69645beb6642ffed4855b09
#: ../../../safe/common/interpolation2d.py:docstring of
#: safe.common.interpolation2d.interpolate2d:22
msgid "Raises: Exception, BoundsError (see note about bounds_error)"
msgstr ""

# 7539bfaac10f410f9c9e557a22f49033
#: ../../../safe/common/interpolation2d.py:docstring of
#: safe.common.interpolation2d.interpolate2d:25
msgid ""
"Input coordinates x and y are assumed to be monotonically increasing, but "
"need not be equidistantly spaced. No such assumption regarding ordering of "
"points is made."
msgstr ""

# c5ac0d3b463645ed99f04bd0279fb090
#: ../../../safe/common/interpolation2d.py:docstring of
#: safe.common.interpolation2d.interpolate2d:29
msgid ""
"Z is assumed to have dimension M x N, where M = len(x) and N = len(y). In "
"other words it is assumed that the x values follow the first (vertical) axis "
"downwards and y values the second (horizontal) axis from left to right."
msgstr ""

# ef0f8803cd33417fa808622aaa05e860
#: ../../../safe/common/interpolation2d.py:docstring of
#: safe.common.interpolation2d.interpolate2d:34
msgid ""
"If this routine is to be used for interpolation of raster grids where data "
"is typically organised with longitudes (x) going from left to right and "
"latitudes (y) from left to right then user interpolate_raster in this module"
msgstr ""

# f58021503f2943df8c27d17550a1ecc9
#: ../../../safe/common/interpolation2d.py:docstring of
#: safe.common.interpolation2d.interpolate_raster:1
msgid "2D interpolation of raster data"
msgstr ""

# f46e29ef372f4b8696c357f9ffc0b06b
#: ../../../safe/common/interpolation2d.py:docstring of
#: safe.common.interpolation2d.interpolate_raster:3
msgid ""
"It is assumed that data is organised in matrix Z as latitudes from bottom up "
"along the first dimension and longitudes from west to east along the second "
"dimension."
msgstr ""

# 0a747fa4f4d547ef9d37a3e9b32c8316
#: ../../../safe/common/interpolation2d.py:docstring of
#: safe.common.interpolation2d.interpolate_raster:7
msgid ""
"Further it is assumed that x is the vector of longitudes and y the vector of "
"latitudes."
msgstr ""

# ad044576b2b0411d965ab2f1fd85fbb9
#: ../../../safe/common/interpolation2d.py:docstring of
#: safe.common.interpolation2d.interpolate_raster:10
msgid "See interpolate2d for details of the interpolation routine"
msgstr ""

# dfdc9f307b2e4bd9b39b90ba1beda12c
#: ../../source/api-docs/safe/common/interpolation2d.rst:11
msgid "This module forms part of the `InaSAFE <http://inasafe.org>`_ tool."
msgstr ""
