# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012, QGIS project
# This file is distributed under the same license as the QGIS Documentation Project package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation Project 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-02-28 10:26\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

# d2f75f4c861b4f5e8797b7068abf1b07
#: ../../source/api-docs/safe/storage/utilities.rst:6
msgid "Module:  safe.storage.utilities"
msgstr ""

# 84f614f5c74b45bf9d9cdfc4a5081734
#: ../../../safe/storage/utilities.py:docstring of safe.storage.utilities:1
msgid "**Utilities for storage module**"
msgstr ""

# 5271e57c80824f99be36feddc408127f
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.array2line:1
msgid "Convert coordinates to linear_ring"
msgstr ""

# 50202d0be5aa4fc0a63cf36f59c14b94
# 317243f947214f32928f25491ab7f705
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.array2line:5 safe.storage.utilities.array2wkt:5
msgid "A can be either a numpy array or a list of coordinates."
msgstr ""

# 4fed18ac688643f7a70fce473d967031
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.array2line:7
msgid "Other options include ogr.wkbLineString"
msgstr ""

# e6607ab3fbe44d4596d690bb59203579
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.array2line:10
msgid "ring: OGR line geometry"
msgstr ""

# 1c5f405101cd4eda9ee4debef1abd73a
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.array2line:12
msgid ""
"Note: Based on http://www.packtpub.com/article/working-geospatial-data-python"
msgstr ""

# f0bc6fec3a0c441f8fa61e7d341c52e9
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.array2wkt:1
msgid "Convert coordinates to wkt format"
msgstr ""

# 8bb2f93e5302493ca715ecf99a5dbd99
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.array2wkt:6
msgid "geom_type: Determines output keyword 'POLYGON' or 'LINESTRING'"
msgstr ""

# d9b86d75eeaa4a699ea2c3ad3c39dc09
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.array2wkt:9
msgid "wkt: geometry in the format known to ogr: Examples"
msgstr ""

# 6a75314ab7074eaea2eaf246cce59ca5
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.array2wkt:12
msgid ""
"POLYGON((1020 1030,1020 1045,1050 1045,1050 1030,1020 1030)) LINESTRING(1000 "
"1000, 1100 1050)"
msgstr ""

# 0f47aa3fd5dc4e719c4b269f1c9e2310
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.bbox_intersection:1
msgid "Compute intersection between two or more bounding boxes"
msgstr ""

# 4809d03d581e46a184af9b0738e8c6a9
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.bbox_intersection:5
msgid ""
"Each is assumed to be a list or a tuple with four coordinates (W, S, E, N)"
msgstr ""

# 65a16e2c6ed2436bb8db4c9a4ddb1835
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.bbox_intersection:9
msgid "result: The minimal common bounding box"
msgstr ""

# 0e6b5857090d4845a7feffd53f752cc2
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.buffered_bounding_box:1
msgid "Grow bounding box with one unit of resolution in each direction"
msgstr ""

# ff645dbafa66429cb2aaabe13d4b2bcc
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.buffered_bounding_box:4
msgid ""
"This will ensure there is enough pixels to robustly provide interpolated "
"values without having to painstakingly deal with all corner cases such as 1 "
"x 1, 1 x 2 and 2 x 1 arrays."
msgstr ""

# 4f87baeab86b4f7db4cb65b79db332e0
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.buffered_bounding_box:8
msgid ""
"The border will also make sure that points that would otherwise fall outside "
"the domain (as defined by a tight bounding box) get assigned values."
msgstr ""

# 70b2d33f4cb040f28d90872d8901587d
# 59e20d05c40348a88c8cf7ad54d66bca
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.buffered_bounding_box:13
#: safe.storage.utilities.minimal_bounding_box:4
msgid "bbox: Bounding box with format [W, S, E, N]"
msgstr ""

# c38ab1936aea4b9e859e0c22fda0d2b6
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.buffered_bounding_box:15
msgid ""
"res - Raster resolution in either direction If resolution is None bbox is "
"returned unchanged."
msgstr ""

# 94769c7150f6445281dc42b11bce3082
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.buffered_bounding_box:19
msgid "Adjusted bounding box"
msgstr ""

# 85656174efb64caf96514f0ea6a20b7b
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.buffered_bounding_box:23
msgid "even though there are enough grid points to support it"
msgstr ""

# e6a5efa8e1e64b378ee6e6d72aa84d19
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.calculate_polygon_area:1
msgid "Calculate the signed area of non-self-intersecting polygon"
msgstr ""

# f7f0d0e61bff4d91afcd65f09c6340b5
# 03f99ac449ed4221a5c2ffd5eb593600
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.calculate_polygon_area:5
#: safe.storage.utilities.calculate_polygon_centroid:5
msgid "to be closed, i.e. first and last points are identical"
msgstr ""

# df63b536199048a6a8739a48b486ab27
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.calculate_polygon_area:7
msgid "sign:"
msgstr ""

# a48337776cf54cb4a1376dd75d2e6e98
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.calculate_polygon_area:8
msgid ""
"If points are ordered counter clockwise, the signed area will be positive. "
"If points are ordered clockwise, it will be negative Default is False which "
"means that the area is always positive."
msgstr ""

# dbab3e97db7f49caa8c4c693abd4ca02
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.calculate_polygon_area:15
msgid "area: Area of polygon (subject to the value of argument signed)"
msgstr ""

# 011876080d9a4182b2aaba0af6520b87
# b52e984397834381bf8261ec7e2d196a
# fb951d318b8f4499bcfd8a9dc195ca96
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.calculate_polygon_area:19
#: safe.storage.utilities.calculate_polygon_centroid:9
#: safe.storage.utilities.points_along_line:12
msgid ""
"http://paulbourke.net/geometry/polyarea/ http://en.wikipedia.org/wiki/"
"Centroid"
msgstr ""

# 378e0defc2be482cbd9f34a8c9ac7f0a
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.calculate_polygon_centroid:1
msgid "Calculate the centroid of non-self-intersecting polygon"
msgstr ""

# 9eb34198db4540ad9624805ab602c530
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.check_geotransform:1
msgid "Check that geotransform is valid"
msgstr ""

# 3c1e0cfb91b247e7ad87d81570f71817
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.check_geotransform:4
msgid "geotransform: GDAL geotransform (6-tuple)."
msgstr ""

# 09641d9c1349409e94cc66df9e022392
# eb42e77dfb334121a1382d6aeaafd943
# b7eb7555e77949bc8b83487aae17d3b5
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.check_geotransform:5
#: safe.storage.utilities.geotransform2bbox:5
#: safe.storage.utilities.geotransform2resolution:5
msgid ""
"(top left x, w-e pixel resolution, rotation, top left y, rotation, n-s pixel "
"resolution). See e.g. http://www.gdal.org/gdal_tutorial.html"
msgstr ""

# 3b4615262b944d15a703c99445d65093
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.check_geotransform:10
msgid ""
"This assumes that the spatial reference uses geographic coordinaties, so "
"will not work for projected coordinate systems."
msgstr ""

# d090f833a2fa46a6ae7aad304e7f6ca2
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.combine_polygon_and_point_layers:1
msgid "Combine polygon and point layers"
msgstr ""

# 7522867b92144d8a93fb51d2f179d9ad
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.combine_polygon_and_point_layers:4
msgid "layers: List of vector layers of type polygon or point"
msgstr ""

# 200a00a5b7234c9686011ee80da1d658
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.combine_polygon_and_point_layers:7
msgid ""
"One point layer with all input point layers and centroids from all input "
"polygon layers."
msgstr ""

# 710468da37be46e1b59bd570143a977d
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.combine_polygon_and_point_layers:10
msgid "IneSAFEError in case a0ttribute names are not the same."
msgstr ""

# b5b504ddc31f49d7870d44aaa6f50d58
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.geometrytype2string:1
msgid "Provides string representation of numeric geometry types"
msgstr ""

# b37a2287a2e14c988f8bd7ccdcbd36ac
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.geometrytype2string:3
msgid "FIXME (Ole): I can't find anything like this in ORG. Why?"
msgstr ""

# 6bb8b7f67b0b466cb31282f240a3aaa5
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.geotransform2bbox:1
msgid "Convert geotransform to bounding box"
msgstr ""

# 30afcef59edf4a41b273c8027fb40451
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.geotransform2bbox:8
msgid "columns: Number of columns in grid"
msgstr ""

# 0d375f4b361f446a91d7f073f8f300e3
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.geotransform2bbox:9
msgid "rows: Number of rows in grid"
msgstr ""

# 27fe314b28ad43b89c852cebe488f15e
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.geotransform2bbox:13
msgid "[west, south, east, north]"
msgstr ""

# 20b11b8e20ba48a18128e4824bb5ee56
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.geotransform2bbox:16
msgid ""
"Rows and columns are needed to determine eastern and northern bounds. FIXME: "
"Not sure if the pixel vs gridline registration issue is observed correctly "
"here. Need to check against gdal > v1.7"
msgstr ""

# fef9914a9c90461ea50015fc699c9db6
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.geotransform2resolution:1
msgid "Convert geotransform to resolution"
msgstr ""

# 1b528a4c4db94e699658c4d28328a8c1
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.geotransform2resolution:8
msgid "isotropic: If True, return the average (dx + dy) / 2"
msgstr ""

# 7972fe61b50f4559994a5b927f7cfc23
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.geotransform2resolution:12
msgid ""
"degrees ordered as longitude first, then latitude. or (resx + resy) / 2 (if "
"isotropic is True)"
msgstr ""

# b7e3eee0741f4a19add40d852a50df98
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.get_geometry_type:1
msgid "Determine geometry type based on data"
msgstr ""

# 923b425d16c64bb3ad79cd105a28a9bc
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.get_geometry_type:5
msgid "which are assumed to be numpy arrays of coordinates"
msgstr ""

# f26c291c43c74646a816c5bb6d5cc50a
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.get_geometry_type:6
msgid "geometry_type: Optional type - 'point', 'line', 'polygon' or None"
msgstr ""

# 7bc6bb56a09d4666b890ef44d3d19909
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.get_geometry_type:10
msgid "ogr.wkbPolygon"
msgstr ""

# cce4219c4b5243af8db51e2c9ab0060d
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.get_geometry_type:13
msgid "If geometry type cannot be determined an Exception is raised."
msgstr ""

# 9bc6e8ddbb514981ac9f18b8eb311993
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.get_geometry_type:15
msgid ""
"There is no consistency check across all entries of the geometry list, only "
"the first element is used in this determination."
msgstr ""

# 28fc1a7ba0a94da6a0160395dcb1c9f0
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.get_polygondata:1
msgid "Extract polygon data from OGR geometry"
msgstr ""

# 1a6b51ab251749a281c8cb28064b9083
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.get_ringdata:1
msgid "Extract coordinates from OGR ring object"
msgstr ""

# ba380cecfd5b4bc48c9072151f19a104
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.get_ringdata:4
msgid "OGR ring object"
msgstr ""

# d49eb726e4704d59843623f8424d95fd
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.get_ringdata:6
msgid "Nx2 numpy array of vertex coordinates (lon, lat)"
msgstr ""

# 8094b7d03ad8425ebc2b4d58436d2345
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.is_sequence:1
msgid "Determine if x behaves like a true sequence but not a string"
msgstr ""

# 17ad6d47364a40018b51bf733adbd165
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.is_sequence:4
msgid ""
"This will for example return True for lists, tuples and numpy arrays but "
"False for strings and dictionaries."
msgstr ""

# c9c1b2746d6a42b59fcddbc8d6ac3a53
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.minimal_bounding_box:1
msgid "Grow bounding box to exceed specified resolution if needed"
msgstr ""

# 50e4e7bb3c97431aa644cee5cfd56f94
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.minimal_bounding_box:5
msgid "min_res: Minimal acceptable resolution to exceed"
msgstr ""

# ba7f8752fb5d46f48955adc05e8bd4b4
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.minimal_bounding_box:6
msgid "eps: Optional tolerance that will be applied to 'buffer' result"
msgstr ""

# 2438f90a09054e3289d3580cfdd68bc5
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.minimal_bounding_box:9
msgid "Adjusted bounding box guaranteed to exceed specified resolution"
msgstr ""

# 4b972740985443fd8c5f29fac17a8752
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.points_along_line:1
msgid "Calculate a list of points along a line with a given delta"
msgstr ""

# 8051d0684f8146b29753de389e0c7d2b
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.points_along_line:4
msgid "line: Numeric array of points (longitude, latitude)."
msgstr ""

# a335b336b1704528a39e7387754187d4
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.points_along_line:5
msgid "delta: Decimal number to be used as step"
msgstr ""

# ff87fe2118194c88b8546fa4d8d22b73
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.points_along_line:8
msgid "V: Numeric array of points (longitude, latitude)."
msgstr ""

# 87ff9e68525149f78262c8cdc424255c
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.points_between_points:1
msgid "Creates an array of points between two points given a delta"
msgstr ""

# bee578a1b39047b1acf714cab89fb5e8
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.points_between_points:4
msgid ""
"u = (x1-x0, y1-y0)/L, where L=sqrt( (x1-x0)^2 + (y1-y0)^2). If r is the "
"resolution, then the points will be given by (x0, y0) + u * n * r for n = 1, "
"2, .... while len(n*u*r) < L"
msgstr ""

# 868820f6abb34c0e879567db3fd3ef2e
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.raster_geometry2geotransform:1
msgid "Convert vectors of longitudes and latitudes to geotransform"
msgstr ""

# 7170792f25c946618b9147e0dc5ef328
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.raster_geometry2geotransform:4
msgid "This is the inverse operation of Raster.get_geometry()."
msgstr ""

# 7d8851603a98480ca42b0c28480352d6
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.raster_geometry2geotransform:7
msgid "longitudes, latitudes: Vectors of geographic coordinates"
msgstr ""

# a9c490453b3d40e8842271e74e13ffc7
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.raster_geometry2geotransform:11
msgid "top left y, rotation, n-s pixel resolution)"
msgstr ""

# 13948938113243d2ab5d12b4420ac02d
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.read_keywords:1
msgid "Read keywords dictionary from file"
msgstr ""

# 35bf914a3e65427db981e82af71ef929
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.read_keywords:5
msgid ""
"The format of one line is expected to be either string: string or string"
msgstr ""

# 9980a6a7f22a4bbd8d53c178ac0b503a
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.read_keywords:8
msgid ""
"such as sqlite or netcdf which can potentially hold more than one layer. The "
"string should map to the layer group as per the example below. If the "
"keywords file contains sublayer definitions but no sublayer was defined, the "
"first layer group will be returned."
msgstr ""

# ff7307a4e51345d5827da7b710ade830
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.read_keywords:14
msgid ""
"a dict of dicts, where the top level dict entries each represent a sublayer, "
"and the values of that dict will be dicts of keyword entries."
msgstr ""

# f84a99222f0d44ef94f1d4acf4c1c22f
# 4eb8c845c13c4f9db42f3cf26f7a1659
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.read_keywords:19
#: safe.storage.utilities.write_keywords:4
msgid "keywords: Dictionary of keyword, value pairs"
msgstr ""

# 64937f97088f41368b78dba206908900
# 33cf1617ce234329b2aba0e7af319af8
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.read_keywords:21
#: safe.storage.utilities.write_keywords:16
msgid "Raises: None"
msgstr ""

# 2e2cc3109b6d4087a8839f1e3f3e827e
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.read_keywords:23
msgid "A keyword layer with sublayers may look like this:"
msgstr ""

# bd6254bdc8964e05a2bf1fcfab6cd034
# 4f8c1d2afed14e71bddce8eab50be083
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.read_keywords:25
#: safe.storage.utilities.write_keywords:20
msgid ""
"[osm_buildings] datatype: osm category: exposure subcategory: building "
"purpose: dki title: buildings_osm_4326"
msgstr ""

# ccb4bf7377584078ac0f75a150942ee9
# cbbf0a3e1711431fbeb32b1cf5d81d3f
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.read_keywords:32
#: safe.storage.utilities.write_keywords:27
msgid ""
"[osm_flood] datatype: flood category: hazard subcategory: building title: "
"flood_osm_4326"
msgstr ""

# 15aeea156d364d71b215c01500b23d2b
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.read_keywords:38
msgid "Wheras a simple keywords file would look like this"
msgstr ""

# e00771b2f9e7476c9553bdb5b35258b1
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.read_keywords:40
msgid ""
"datatype: flood category: hazard subcategory: building title: flood_osm_4326"
msgstr ""

# 31acb31ea7ea4085a81617cbfd3f5b0b
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.read_keywords:45
msgid ""
"If filename does not exist, an empty dictionary is returned Blank lines are "
"ignored Surrounding whitespace is removed from values, but keys are "
"unmodified If there are no ':', then the keyword is treated as a key with no "
"value"
msgstr ""

# 5e05e39999a243deaaf78539b8084a67
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.rings_equal:1
msgid "Compares to linear rings as numpy arrays"
msgstr ""

# 029934b47914432f8233b2670f6d2a02
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.rings_equal:4
msgid "x, y: Nx2 numpy arrays"
msgstr ""

# 61f68df2147445278f6f32f7ab8418b3
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.rings_equal:7
msgid "True if x == y or x' == y (up to the specified tolerance)"
msgstr ""

# d38848e67d5a4fe1853bb390c7c5138b
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.rings_equal:9
msgid ""
"where x' is x reversed in the first dimension. This corresponds to linear "
"rings being seen as equal irrespective of whether they are organised in "
"clock wise or counter clock wise order"
msgstr ""

# 6e0364268f3245a5960f41c5199a9266
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.write_keywords:1
msgid "Write keywords dictonary to file"
msgstr ""

# 0ea376eedd624a3cb25eefccb4e40d11
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.write_keywords:5
msgid "filename: Name of keywords file. Extension expected to be .keywords"
msgstr ""

# 0d1537ebb40e441581394faac7bef051
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.write_keywords:7
msgid ""
"such as sqlite or netcdf which can potentially hold more than one layer. The "
"string should map to the layer group as per the example below. **If the "
"keywords file contains sublayer definitions but no sublayer was defined, "
"keywords file content will be removed and replaced with only the keywords "
"provided here.**"
msgstr ""

# fd93194d32024a80904592e44347f018
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.write_keywords:14
msgid "Returns: None"
msgstr ""

# c85a31e6c68e492299aa063233991e70
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.write_keywords:18
msgid "A keyword file with sublayers may look like this:"
msgstr ""

# f269e78e79c54c70b30efae7eba60f48
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.write_keywords:33
msgid ""
"Keys must be strings not containing the \":\" character Values can be "
"anything that can be converted to a string (using Python's str function)"
msgstr ""

# 08e851b380b1441c8e9ea94e3a716cef
#: ../../../safe/storage/utilities.py:docstring of
#: safe.storage.utilities.write_keywords:37
msgid ""
"Surrounding whitespace is removed from values, but keys are unmodified The "
"reason being that keys must always be valid for the dictionary they came "
"from. For values we have decided to be flexible and treat entries like 'unit:"
"m' the same as 'unit: m', or indeed 'unit: m '. Otherwise, unintentional "
"whitespace in values would lead to surprising errors in the application."
msgstr ""

# a443b4fb180e43588189f1d7df3e9381
#: ../../source/api-docs/safe/storage/utilities.rst:11
msgid "This module forms part of the `InaSAFE <http://inasafe.org>`_ tool."
msgstr ""
