# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012, QGIS project
# This file is distributed under the same license as the QGIS Documentation Project package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation Project 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-02-28 10:26\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

# 2601c7dfd21848798d24b9d4d1b43eea
#: ../../source/api-docs/safe/postprocessors/abstract_postprocessor.rst:6
msgid "Module:  safe.postprocessors.abstract_postprocessor"
msgstr ""

# a499195277c14c13b58b9623e026ba5b
#: ../../../safe/postprocessors/abstract_postprocessor.py:docstring of
#: safe.postprocessors.abstract_postprocessor:1
msgid "**Abstract postprocessor class, do not instantiate directly**"
msgstr ""

# 3ecd8b191e8547719bbd8b9a02200ff8
#: ../../../safe/postprocessors/abstract_postprocessor.py:docstring of
#: safe.postprocessors.abstract_postprocessor.AbstractPostprocessor:1
msgid ""
"Abstract postprocessor class, do not instantiate directly. but instantiate "
"the PostprocessorFactory class which will take care of setting up many "
"prostprocessors. Alternatively you can as well instantiate directly a sub "
"class of AbstractPostprocessor."
msgstr ""

# fbd7e0eea74a425ab20d4a7374d0740d
#: ../../../safe/postprocessors/abstract_postprocessor.py:docstring of
#: safe.postprocessors.abstract_postprocessor.AbstractPostprocessor:6
msgid ""
"Each subclass has to overload the process method and call its parent like "
"this: AbstractPostprocessor.process(self) if a postprocessor needs "
"parmeters, then it should override the setup and clear methods as well and "
"call respectively AbstractPostprocessor.setup(self) and "
"AbstractPostprocessor.clear(self)."
msgstr ""

# 9aa42f9d612646ee8e75718550db300a
#: ../../../safe/postprocessors/abstract_postprocessor.py:docstring of
#: safe.postprocessors.abstract_postprocessor.AbstractPostprocessor:12
msgid ""
"for implementation examples see AgePostprocessor which uses mandatory and "
"optional parameters"
msgstr ""

# f7af50aee6b34215a2b97191c8da38b2
#: ../../../safe/postprocessors/abstract_postprocessor.py:docstring of
#: safe.postprocessors.abstract_postprocessor.AbstractPostprocessor.clear:1
msgid ""
"Abstract method to be called from the concrete implementation with "
"AbstractPostprocessor.process(self) it takes care of results being cleared"
msgstr ""

# 95a3088ea6674fa488e53b896d6281e3
# 2e288c9b5e584d14be93ece42af8695f
# 1650cee31ca34e28ab85e857a4d51260
# 8fca6f5fe1b1455ea52069e0af1516f7
# 5018ccfd6781476d9bc7b2eeb4a58b14
# 6856466094804ba59e3c57d1ebe084fd
# 08ab5daf882049d182420e9857b31494
# c0cca8e23e10463298ebaf0f22d34f92
# a6d7ce5a42f3448fab5471c257c37a09
# d414ac5ad8f54f77a87b8585e82ce2d0
#: ../../../safe/postprocessors/abstract_postprocessor.py:docstring of
#: safe.postprocessors.abstract_postprocessor.AbstractPostprocessor.clear:6
#: safe.postprocessors.abstract_postprocessor.AbstractPostprocessor.clear:8
#: safe.postprocessors.abstract_postprocessor.AbstractPostprocessor.clear:10
#: safe.postprocessors.abstract_postprocessor.AbstractPostprocessor.process:6
#: safe.postprocessors.abstract_postprocessor.AbstractPostprocessor.process:8
#: safe.postprocessors.abstract_postprocessor.AbstractPostprocessor.process:10
#: safe.postprocessors.abstract_postprocessor.AbstractPostprocessor.results:4
#: safe.postprocessors.abstract_postprocessor.AbstractPostprocessor.results:8
#: safe.postprocessors.abstract_postprocessor.AbstractPostprocessor.setup:8
#: safe.postprocessors.abstract_postprocessor.AbstractPostprocessor.setup:10
msgid "None"
msgstr ""

# 9f1f40d4012041dabd2aa89ed50073f6
#: ../../../safe/postprocessors/abstract_postprocessor.py:docstring of
#: safe.postprocessors.abstract_postprocessor.AbstractPostprocessor.process:1
msgid ""
"Abstract method to be called from the concrete implementation with "
"AbstractPostprocessor.process(self) it takes care of results being "
"initialized"
msgstr ""

# 6cdf1233295a4ae1aba5990a29f582d8
#: ../../../safe/postprocessors/abstract_postprocessor.py:docstring of
#: safe.postprocessors.abstract_postprocessor.AbstractPostprocessor.results:1
msgid "Returns the postprocessors results"
msgstr ""

# f9983513f2004ef1bbb989125892a5f0
#: ../../../safe/postprocessors/abstract_postprocessor.py:docstring of
#: safe.postprocessors.abstract_postprocessor.AbstractPostprocessor.results:6
msgid "Odict of results"
msgstr ""

# bb894ad0e0f34d0a8df3f25446ed2ef2
#: ../../../safe/postprocessors/abstract_postprocessor.py:docstring of
#: safe.postprocessors.abstract_postprocessor.AbstractPostprocessor.setup:1
msgid ""
"Abstract method to be called from the concrete implementation with "
"AbstractPostprocessor.setup(self, None) it takes care of results being "
"initialized"
msgstr ""

# 60601c421f7f43b5be24253c1611a3e3
#: ../../../safe/postprocessors/abstract_postprocessor.py:docstring of
#: safe.postprocessors.abstract_postprocessor.AbstractPostprocessor.setup:6
msgid "params: dict of parameters to pass to the post processor"
msgstr ""

# 91743f04268c486385ec35e1ca33f3f7
#: ../../source/api-docs/safe/postprocessors/abstract_postprocessor.rst:11
msgid "This module forms part of the `InaSAFE <http://inasafe.org>`_ tool."
msgstr ""
